package Lesson_7.Task_1;

/*
Создать классы Собака и Кот (в отдельных файлах) с наследованием от класса Животное.
Все животные могут бежать и плыть. В качестве параметра каждому методу передаётся длина препятствия. Результатом
выполнения действия будет печать в консоль. (Например, dogBobik.run(160); -> "Бобик пробежал 150 м.");
У каждого животного есть ограничения на действия (бег: кот 200 м., собака 600 м.; плавание: кот не умеет плавать,
собака 10 м.).
Добавить подсчёт созданных котов, собак и животных.
Расширить задачу, добавив для котов возможность кушать из миски, выполнив следующие пункты:
-Сделать так, чтобы в миске с едой не могло получиться отрицательное кол-во еды (например, в миске 10 еды,
а кот пытается покушать 15-20).
-Каждому коту нужно добавить поле сытость (когда создаём котов, они голодны). Если коту удалось покушать (хватило еды),
сытость = true.
-Считаем, что если коту мало еды в миске, то он просто не трогает, то есть не может быть на половину сыт (это сделано
для упрощения логики программы).
-Создать массив котов и миску с едой, попросить всех котов покушать из этой миски и потом вывести информацию о сытости
котов в консоль
-Добавить метод, с помощью которого можно было бы добавлять еду в миску.
 */
public class Main {
    public static void main(String[] args) {
        // Создаем миску с едой
        Bowl bowl = new Bowl(20);

        // Создаем объекты собак и котов
        Dog dogBobik = new Dog("Бобик");
        Cat catMurzik = new Cat("Мурзик");
        Cat catVasya = new Cat("Вася");

        // Выполняем действия с собаками и котами
        dogBobik.run(500);
        dogBobik.swim(20);
        catMurzik.run(205);
        catMurzik.swim(5);

        // Коты пытаются поесть из миски
        Cat[] cats = {catMurzik, catVasya};
        for (Cat cat : cats) {
            boolean isSatiated = cat.eat(bowl, 15);
            System.out.println(cat.name + " сытость после еды: " + (isSatiated ? "сыт" : "голоден"));
        }
        // Выводим состояние миски
        System.out.println("Остаток еды в миске: " + bowl.getFoodAmount());

        // Добавляем еду в миску
        bowl.addFood(25);

        // Коты снова пытаются поесть
        for (Cat cat : cats) {
            boolean isSatiated = cat.eat(bowl, 15);
            System.out.println(cat.name + " сытость после второго приема пищи: " + (isSatiated ? "сыт" : "голоден"));
        }
        // Выводим состояние миски
        System.out.println("Остаток еды в миске: " + bowl.getFoodAmount());

        // Выводим статистику по созданным объектам
        System.out.println("Всего животных: " + Animal.getAnimalCount());
        System.out.println("Всего собак: " + Dog.getDogCount());
        System.out.println("Всего котов: " + Cat.getCatCount());
    }
}
